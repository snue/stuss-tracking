<!doctype html>
<html lang="de">
    <title>Kontaktdatenerfassung +++ StamF 2021</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ü¶Ü</text></svg>">
    <style>
noscript{display:block;border:3px #cc3 solid;border-radius:10px;padding:1em;}
html{box-sizing:border-box;}*{box-sizing:inherit;}
body{max-width:860px;margin:0 auto;padding: 20px;font:1rem sans-serif;background-image:radial-gradient(#0e6,#fed);color:#112;}
h1{text-align:center;font-family:monospace;transform:rotate(3deg);}
h1 span{display:block;font-size:0.7em;font-style:italic;transform:rotate(-5deg);}
a{color:#400;}
.short{margin:1em 0;}
div a{font-size:0.9em;font-style:italic;}
a:hover{text-decoration:none;}
body > a{display:inline-block;margin:2em;font-size:1.1em;}
#row{display:flex;flex-wrap:wrap;justify-content:space-around;margin:1em auto;padding-bottom:5em;background-image:radial-gradient(#0b3,#0e6);padding:1em;border-radius:1em;}
#row form{width:49%;}
svg{display:block;padding:10px;max-width:90vw;max-height:90vh;}
#qrout{display:flex;flex-direction:column;justify-content:center;align-items:center;border:1px gray solid;width:49%;border-radius:5px;min-height:200px;padding:0.5em;}
#qrout div{font-weight:bold;}
form div{text-align:center;margin:1em 0;}
input{width:100%;font-size:1.2em;margin:0.3em 0;border-radius:4px;padding:1em;border:none;}
input[type=submit]{font-family:monospace;transform:rotate(-1deg);background-image:radial-gradient(#080,#0b6);font-weight:bold;color:white;}
label em{display:block;}
label em::before,label em::after{content:" ‚Äì ";}
#info,#info_en{padding:0.5em;}
#info:target,#info_en:target{border:3px #994 dashed;border-radius:10px;}
#e{font:0.8em monospace;margin-top:10em;}
@media screen and (max-width:992px){#row form{width:100%;}#qrout{width:100%;}}
@media print{form,.short,#info,#info_en,h2,a,#e{display:none !important;}}
@media (prefers-color-scheme: dark) {svg{background-color:white;}}
    </style>
    <h1>stuss am fluss <span>kontakt¬≠daten¬≠ged√∂ns</span></h1>
    <noscript><strong>ACHTUNG!</strong> Du musst JavaScript aktivieren, damit das Ding hier l√§uft. Momentan ist JavaScript bei dir deaktiviert. <em>Please enable Javascript.</em></noscript>
    <div class="short">Sch√∂n, dass ihr zum Stuss am Fluss kommen wollt. Erstellt bitte bevor ihr zum Festival kommt euren pers√∂nlichen QR-Code mit euren Daten. Zeigt ihn bei jedem Betreten und Verlassen des Gel√§ndes vor, er wird zur Kontaktnachverfolgung und G√§stez√§hlung genutzt. Am Einlass vor Ort erfolgt die Registrierung (der QR-Code ist keine Einlassberechtigung!). <a href="#info">Mehr Infos weiter unten</a></div>
    <div class="short" lang="en">Below you can create your personal QR code. You will have to show it every time when you enter or leave the premises. It is used for contact tracking purposes and counting purposes only and is not a reservation. Thank you for your cooperation! <a href="#info_en">Further information below</a></div>
    <div id="row">
    <form>
        <div><label for="name">Vollst√§ndiger Name</label><input name="name" maxlength="94" required /></div>
        <div><label for="contact">Telefonnummer <em>oder</em> E-Mail-Adresse</label><input name="contact" maxlength="94" required /></div>
        <div><label for="label">Spitzname (optional, f√ºr Ausdruck)</label><input name="label" /></div>
        <div><input value="Bitte JavaScript aktivieren" type="submit" disabled /></div>
    </form>
    <div id="qrout"></div>
    </div>
    <div id="info"><h2>Nochmal genauer</h2>
    Tach nochmal! F√ºr die Einhaltung der Corona-Auflagen ben√∂tigen wir eure Unterst√ºtzung. Bitte erstellt pro Person einen QR-Code mit euren Daten bevor ihr zum Festival kommt (siehe oben). Haltet ihn bei jedem Betreten und Verlassen des Gel√§ndes bereit, er wird zur Kontaktnachverfolgung und G√§stez√§hlung genutzt. Am Einlass vor Ort erfolgt die Registrierung. (Der QR-Code ist keine Einlassberechtigung! Eine Reservierung ist zur Zeit leider nicht mehr m√∂glich.) Euren pers√∂nlichen QR-Code k√∂nnt ihr wahlweise screenshotten, ausdrucken, oder t√§towieren. Solltet ihr kein Smartphone, Drucker oder T√§towierer des Vertrauens haben, kommt trotzdem vorbei und gebt unserer Crew am Einlass Bescheid, es wird eine M√∂glichkeit geben, den QR-Code am Einlass zu generieren. Aber hey, derzeit hat doch niemand Bock in einer langen Schlange anzustehen also helft mit, die Wartezeit zu minimieren. Und vergesst eure Masken nicht. <a href="#row">Zur√ºck zum Formular</a></div>
    <div id="info_en"><h2>Further info</h2>
    We need your support to comply with the Corona requirements. Please create your personal QR code with your contact details before you come to the festival. Keep it ready for every time you enter or leave the premises, it is used for contact tracking and guest counting. We will register you at the entrance. Reservations are not possible anymore. If you do not have the opportunity to print the code, let our crew at the entrance know, there will be a possibility to generate the QR code at the entrance. But hey, at the moment nobody wants to wait in a long queue so help to minimize the waiting time. Don‚Äôt forget your masks. <a href="#row">go back to the form</a></div>
    <a href="entenschutz.html">Datenschutz</a>
    <div id="e"></div>
    <script src="qrcode.alnum.min.js"></script>
    <script>
function dbg(reason) {
    var dbgout = document.getElementById("e");
    if(dbgout.innerHTML==="") dbgout.innerHTML = "Technik-Infos, bitte ignorieren:";
    document.getElementById("e").innerHTML += "<br><em>Ups...</em> " + reason;
}
function ente() {
    var d = document.getElementById("d");
    if(d) d.innerHTML += "ü¶Ü";
}
function str2u8(source) {
    var ret = new Uint8Array(source.length);
    for(var i=0; i<ret.length; ++i) ret[i] = source.charCodeAt(i);
    return ret;
}
function injectScript(file, callback) {
    ente();
    dbg("Wir brauchen mehr " + file);
    var s = document.createElement("script");
    s.src = file;
    s.onload = callback;
    document.head.appendChild(s);
}
function b45enc(b) {
    var r = [];
    var i = 0;
    while(i+1 < b.length) {
        var x = (b[i] << 8) | b[i+1];
        var e = (x/(45*45)) | 0;
        x = x % (45*45);
        var d = (x/45) | 0;
        var c = x%45;
        r.push(c, d, e);
        i += 2;
    }
    if(i < b.length) {
        var x = b[i];
        r.push(x%45, (x/45)|0);
    }
    return r;
}
function showQR(c) {
    var cipher = new Uint8Array(c);
    var qr = qrcode(0,"L");
    qr.addData(b45enc(cipher),"Alphanumeric");
    qr.make();
    o.innerHTML = qr.createSvgTag({scalable:true});
    o.innerHTML += "<div>"+f.label.value+"</div>";
}
function forgeRSA() {
    ente();
    try {
        var c = forge.pki.publicKeyFromPem("-----BEGIN PUBLIC KEY-----"+pk_b64+"-----END PUBLIC KEY-----").encrypt(t, 'RSA-OAEP', {md: forge.md.sha256.create()});
        var c_u8 = str2u8(c);
        showQR(c_u8);
    } catch (e) {
        dbg(e);
    }
}
function cryptoPolyFill(err) {
    dbg(err);
    if(pfIteration === 0) {
        pfIteration++;
        injectScript("cryptoshim.min.js", encrypt);
    } else {
        injectScript("forge.rsa.min.js", forgeRSA);
    }
}
function encrypt() {
    try {
        window.crypto = window.crypto || window.msCrypto;
        if(window.crypto.webkitSubtle){
            window.crypto.subtle = window.crypto.webkitSubtle;
        } // courtesy of https://github.com/diafygi/webcrypto-examples/blob/e56b63a/index.html#L41
        if(!window.crypto || !window.crypto.subtle || !window.crypto.subtle.importKey) {
            cryptoPolyFill("Wir versuchen mal was.");
            return;
        }
        var k_ = window.crypto.subtle.importKey("spki", pk, {name:"RSA-OAEP", hash:{name:"SHA-256"}}, false, ["encrypt"]);
        k_.then(function(k){
            var c_ = window.crypto.subtle.encrypt({name:"RSA-OAEP"}, k, (new TextEncoder).encode(t));
            c_.then(showQR, cryptoPolyFill);
        }, cryptoPolyFill);
    } catch (e) { cryptoPolyFill(e); }
}
function main() {
    f.addEventListener("submit", function(e) {
        e.preventDefault();
        o.innerHTML = "<div id='d'>mom<em>entchen</em>... </div>";
        t = [f.elements.name.value, f.elements.contact.value].join("\t");
        encrypt();
    });
}
var f = document.forms[0];
var o = document.getElementById("qrout");
var t = "";
var pfIteration = 0;
var pk_b64 = "___PKEY___";
var pk_bin = atob(pk_b64);
var polyfill = {};
var pk = str2u8(pk_bin);
if(typeof TextEncoder === "undefined" || typeof Promise === "undefined"){
    injectScript("polyfill.js", main);
}else{main()}
var b=f[3];
b.disabled=false;
b.value="QR-Code generieren";
    </script>
</html>
<!-- https://github.com/snue/stuss-tracking -->
